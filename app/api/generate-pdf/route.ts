import { type NextRequest, NextResponse } from "next/server"
import { US_STATES, VEHICLE_TYPE_LABELS, MOVE_DATE_LABELS, EXIT_STATE_DATA, ENTRY_STATE_DATA } from "@/lib/checklists"

export async function GET(request: NextRequest) {
  const { searchParams } = new URL(request.url)

  const fromState = searchParams.get("from") || ""
  const toState = searchParams.get("to") || ""
  const vehicles = searchParams.get("vehicles")?.split(",") || []
  const moveDate = searchParams.get("moveDate") || ""
  const isStudent = searchParams.get("student") === "true"
  const isMilitary = searchParams.get("military") === "true"
  const hasLienholder = searchParams.get("lienholder") === "true"

  if (!fromState || !toState) {
    return NextResponse.json({ error: "Missing required parameters" }, { status: 400 })
  }

  const fromStateName = US_STATES[fromState] || fromState
  const toStateName = US_STATES[toState] || toState
  const exitData = EXIT_STATE_DATA[fromState]
  const entryData = ENTRY_STATE_DATA[toState]

  if (!exitData || !entryData) {
    return NextResponse.json({ error: "State data not found" }, { status: 404 })
  }

  const textContent = `VEHICLE REGISTRATION CHECKLIST
========================================

Moving from: ${fromStateName}
Moving to: ${toStateName}
${vehicles.length > 0 ? `Vehicles: ${vehicles.map((v) => VEHICLE_TYPE_LABELS[v] || v).join(", ")}` : ""}
${moveDate ? `Move Status: ${MOVE_DATE_LABELS[moveDate] || moveDate}` : ""}
${isStudent ? "Student Status: Yes" : ""}
${isMilitary ? "Military Service: Yes" : ""}
${hasLienholder ? "Vehicle Loan: Yes" : ""}

REQUIRED FORMS
==============
${entryData.requiredForms
  .map(
    (form, index) => `
${index + 1}. ${form.name}
   Description: ${form.description}
   ${form.required ? "   ✓ REQUIRED FORM" : ""}
`,
  )
  .join("")}

REGISTRATION STEPS
==================
${[...exitData.steps, ...entryData.steps]
  .map(
    (step, index) => `
${index + 1}. ${step.title}
   ${step.description}
   ${step.urgent ? "   ⚠️ TIME SENSITIVE - Complete ASAP" : ""}
`,
  )
  .join("")}

${
  (isStudent || isMilitary || hasLienholder) && entryData.specialCircumstances
    ? `
SPECIAL CIRCUMSTANCES
====================
${
  isStudent && entryData.specialCircumstances.student
    ? `
STUDENT STATUS:
${entryData.specialCircumstances.student.description}
`
    : ""
}
${
  isMilitary && entryData.specialCircumstances.military
    ? `
MILITARY SERVICE:
${entryData.specialCircumstances.military.description}
`
    : ""
}
${
  hasLienholder && entryData.specialCircumstances.lienholder
    ? `
VEHICLE LOAN:
${entryData.specialCircumstances.lienholder.description}
`
    : ""
}
`
    : ""
}

${
  entryData.importantDeadline
    ? `
IMPORTANT DEADLINE
==================
${entryData.importantDeadline.replace(/<[^>]*>/g, "")}
`
    : ""
}

========================================
Generated by VehicleReregister.com
Date: ${new Date().toLocaleDateString()}
Time: ${new Date().toLocaleTimeString()}
========================================`

  const textBuffer = new TextEncoder().encode(textContent)

  return new NextResponse(textBuffer, {
    status: 200,
    headers: {
      "Content-Type": "text/plain; charset=utf-8",
      "Content-Disposition": `attachment; filename="Vehicle-Registration-Checklist-${fromState}-to-${toState}.txt"`,
      "Cache-Control": "no-cache, no-store, must-revalidate",
      Pragma: "no-cache",
      Expires: "0",
    },
  })
}
